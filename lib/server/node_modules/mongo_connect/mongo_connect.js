var EventEmitter = require('events').EventEmitter;
var mongodb = require('mongodb');
var config = require('config');
var MongoClient = mongodb.MongoClient;
var config = {
    snapchallenge: 'mongodb://127.0.0.1:27017/' + config.database.name
};
var dbs = new EventEmitter();

dbs.mongodb = mongodb;

dbs.init = function (dbname, callback) {

    if (typeof callback !== 'function') {
        callback = function (error) {
            if (error) throw error;
        };
    }

    if (dbs[dbname]) {

        process.nextTick(function () {
            if (typeof callback === 'function') {
                callback(null, dbs[dbname], dbs[dbname].db);
            }
        });

	    return dbs[dbname];

    }

    var db = new EventEmitter();

    function cb (e) {
        var args = Array.prototype.slice.call(arguments);
        callback.apply(null, args);
        args.unshift('error');
        db.emit.apply(db, args);
        dbs.emit.apply(dbs, args);
    };

    MongoClient.connect(config[dbname], function (error, DB) {

        if (error) {
            return callback(error);
        }

        var dbname = DB.databaseName;

        DB.listCollections().toArray(function (error, items) {

            if (error) return cb(error);

            for (var i = 0; i < items.length; i++) {
                var c = items[i].name.replace(dbname + '.', '');
                if (c !== 'system.indexes') {
                    db[c] = DB.collection(c);
                }
            }

            db._ready = true;
            db.db = DB;
            dbs[dbname] = db;
            db.emit('ready', db, DB);
            callback(null, db, DB);

        });

        DB.on('error', function (error) {
            console.log('database error:', error.message);
        });

    });

    return db;

};

module.exports = dbs;
